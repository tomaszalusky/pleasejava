JAVA CODE MODEL
	pleasejava.test.alltypes.TestInterface:
	CLASS MODEL (interface pleasejava.test.alltypes.TestInterface)
		IMPORTS:
			plsql.Plsql.BinaryInteger
			plsql.Plsql.Clob
			plsql.Plsql.IndexByTable
			plsql.Plsql.Long_
			plsql.Plsql.NestedTable
			plsql.Plsql.Out
			plsql.Plsql.PlsInteger
			plsql.Plsql.String_
			plsql.Plsql.Varchar2
			plsql.Plsql.Varray
		METHODS:
		echo:
		METHOD MODEL (echo)
			inputIbt1:
			PARAMETER MODEL (inputIbt1)
				@IndexByTable("a_test_package.ibt1") java.util.Map<@PlsInteger java.lang.Integer,pleasejava.test.alltypes.Record2>
			inputVar1:
			PARAMETER MODEL (inputVar1)
				@Varray("a_test_package.var1") java.util.List<@Varray("a_test_package.var4") java.util.List<pleasejava.test.alltypes.Record3>>
			inputNst2:
			PARAMETER MODEL (inputNst2)
				@NestedTable("a_test_package.nst2") java.util.List<pleasejava.test.alltypes.Record3 @Varray("a_test_package.var4") [] >
			inputNst3:
			PARAMETER MODEL (inputNst3)
				@NestedTable("a_test_package.nst3") java.util.Map<java.lang.Integer,@NestedTable("a_test_package.nst4") java.util.List<pleasejava.test.alltypes.Record3>>
			inputRec1:
			PARAMETER MODEL (inputRec1)
				pleasejava.test.alltypes.Record1
			inputVar3:
			PARAMETER MODEL (inputVar3)
				@Varray("a_test_package.var3") java.util.List<@IndexByTable("a_test_package.ibt5") java.util.SortedMap<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			inputIbt2:
			PARAMETER MODEL (inputIbt2)
				@IndexByTable("a_test_package.ibt2") java.util.Map<@BinaryInteger java.math.BigInteger,@IndexByTable("a_test_package.ibt5") java.util.Map<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			inputNst1:
			PARAMETER MODEL (inputNst1)
				@NestedTable("a_test_package.nst1") java.util.List<@IndexByTable("a_test_package.ibt5") java.util.Map<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			inputIbt3:
			PARAMETER MODEL (inputIbt3)
				@IndexByTable("a_test_package.ibt3") java.util.Map<@Long_ java.lang.String,@Varchar2(200) java.lang.String @NestedTable("a_test_package.nst5") [] >
			inputVar2:
			PARAMETER MODEL (inputVar2)
				@Varray("a_test_package.var2") java.util.List<@Varchar2(200) java.lang.String @NestedTable("a_test_package.nst5") [] >
			inputClob:
			PARAMETER MODEL (inputClob)
				@Clob java.lang.String
			outputIbt1:
			PARAMETER MODEL (outputIbt1)
				@Out
				@IndexByTable("a_test_package.ibt1") java.util.Map<@PlsInteger java.lang.Integer,pleasejava.test.alltypes.Record2>
			outputVar1:
			PARAMETER MODEL (outputVar1)
				@Out
				@Varray("a_test_package.var1") java.util.List<@Varray("a_test_package.var4") java.util.List<pleasejava.test.alltypes.Record3>>
			outputNst2:
			PARAMETER MODEL (outputNst2)
				@Out
				@NestedTable("a_test_package.nst2") java.util.List<pleasejava.test.alltypes.Record3 @Varray("a_test_package.var4") [] >
			outputNst3:
			PARAMETER MODEL (outputNst3)
				@Out
				@NestedTable("a_test_package.nst3") java.util.Map<java.lang.Integer,@NestedTable("a_test_package.nst4") java.util.List<pleasejava.test.alltypes.Record3>>
			outputRec1:
			PARAMETER MODEL (outputRec1)
				@Out
				pleasejava.test.alltypes.Record1
			outputVar3:
			PARAMETER MODEL (outputVar3)
				@Out
				@Varray("a_test_package.var3") java.util.List<@IndexByTable("a_test_package.ibt5") java.util.SortedMap<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			outputIbt2:
			PARAMETER MODEL (outputIbt2)
				@Out
				@IndexByTable("a_test_package.ibt2") java.util.Map<@BinaryInteger java.math.BigInteger,@IndexByTable("a_test_package.ibt5") java.util.Map<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			outputNst1:
			PARAMETER MODEL (outputNst1)
				@Out
				@NestedTable("a_test_package.nst1") java.util.List<@IndexByTable("a_test_package.ibt5") java.util.Map<@String_(20) java.lang.String,@Varray("a_test_package.var5") java.util.List<@Varchar2(100) java.lang.String>>>
			outputIbt3:
			PARAMETER MODEL (outputIbt3)
				@Out
				@IndexByTable("a_test_package.ibt3") java.util.Map<@Long_ java.lang.String,@Varchar2(200) java.lang.String @NestedTable("a_test_package.nst5") [] >
			outputVar2:
			PARAMETER MODEL (outputVar2)
				@Out
				@Varray("a_test_package.var2") java.util.List<@Varchar2(200) java.lang.String @NestedTable("a_test_package.nst5") [] >
			outputClob:
			PARAMETER MODEL (outputClob)
				@Out
				@Clob java.lang.StringBuilder

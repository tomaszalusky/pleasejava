JAVA MODEL:
	pleasejava.test.alltypes.TestInterface = CLASS MODEL (interface pleasejava.test.alltypes.TestInterface)
		IMPORTS:
			java.math.BigInteger
			java.util.List
			java.util.Map
			java.util.SortedMap
			pleasejava.test.alltypes.Record1
			pleasejava.test.alltypes.Record2
			pleasejava.test.alltypes.Record3
			plsql.Plsql.BinaryInteger
			plsql.Plsql.Clob
			plsql.Plsql.Function
			plsql.Plsql.IndexByTable
			plsql.Plsql.Integer_
			plsql.Plsql.Long_
			plsql.Plsql.NestedTable
			plsql.Plsql.Out
			plsql.Plsql.PlsInteger
			plsql.Plsql.String_
			plsql.Plsql.Varchar2
			plsql.Plsql.Varray
		FIELDS:
		METHODS:
			echo = METHOD MODEL ([] echo)
				ANNOTATIONS:
					@Function("echo")
				PARAMETERS:
					null = PARAMETER MODEL (null)
						ANNOTATIONS:
						TYPE:
							@Integer_ BigInteger
					inputIbt1 = PARAMETER MODEL (inputIbt1)
						ANNOTATIONS:
						TYPE:
							@IndexByTable("a_test_package.ibt1") Map<@PlsInteger Integer,Record2>
					inputVar1 = PARAMETER MODEL (inputVar1)
						ANNOTATIONS:
						TYPE:
							@Varray("a_test_package.var1") List<@Varray("a_test_package.var4") List<Record3>>
					inputNst2 = PARAMETER MODEL (inputNst2)
						ANNOTATIONS:
						TYPE:
							@NestedTable("a_test_package.nst2") List<Record3 @Varray("a_test_package.var4") []>
					inputNst3 = PARAMETER MODEL (inputNst3)
						ANNOTATIONS:
						TYPE:
							@NestedTable("a_test_package.nst3") Map<Integer,@NestedTable("a_test_package.nst4") List<Record3>>
					inputRec1 = PARAMETER MODEL (inputRec1)
						ANNOTATIONS:
						TYPE:
							Record1
					inputVar3 = PARAMETER MODEL (inputVar3)
						ANNOTATIONS:
						TYPE:
							@Varray("a_test_package.var3") List<@IndexByTable("a_test_package.ibt5") SortedMap<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					inputIbt2 = PARAMETER MODEL (inputIbt2)
						ANNOTATIONS:
						TYPE:
							@IndexByTable("a_test_package.ibt2") Map<@BinaryInteger BigInteger,@IndexByTable("a_test_package.ibt5") Map<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					inputNst1 = PARAMETER MODEL (inputNst1)
						ANNOTATIONS:
						TYPE:
							@NestedTable("a_test_package.nst1") List<@IndexByTable("a_test_package.ibt5") Map<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					inputIbt3 = PARAMETER MODEL (inputIbt3)
						ANNOTATIONS:
						TYPE:
							@IndexByTable("a_test_package.ibt3") Map<@Long_ String,@Varchar2(200) String @NestedTable("a_test_package.nst5") []>
					inputVar2 = PARAMETER MODEL (inputVar2)
						ANNOTATIONS:
						TYPE:
							@Varray("a_test_package.var2") List<@Varchar2(200) String @NestedTable("a_test_package.nst5") []>
					inputClob = PARAMETER MODEL (inputClob)
						ANNOTATIONS:
						TYPE:
							@Clob String
					outputIbt1 = PARAMETER MODEL (outputIbt1)
						ANNOTATIONS:
							@Out
						TYPE:
							@IndexByTable("a_test_package.ibt1") Map<@PlsInteger Integer,Record2>
					outputVar1 = PARAMETER MODEL (outputVar1)
						ANNOTATIONS:
							@Out
						TYPE:
							@Varray("a_test_package.var1") List<@Varray("a_test_package.var4") List<Record3>>
					outputNst2 = PARAMETER MODEL (outputNst2)
						ANNOTATIONS:
							@Out
						TYPE:
							@NestedTable("a_test_package.nst2") List<Record3 @Varray("a_test_package.var4") []>
					outputNst3 = PARAMETER MODEL (outputNst3)
						ANNOTATIONS:
							@Out
						TYPE:
							@NestedTable("a_test_package.nst3") Map<Integer,@NestedTable("a_test_package.nst4") List<Record3>>
					outputRec1 = PARAMETER MODEL (outputRec1)
						ANNOTATIONS:
							@Out
						TYPE:
							Record1
					outputVar3 = PARAMETER MODEL (outputVar3)
						ANNOTATIONS:
							@Out
						TYPE:
							@Varray("a_test_package.var3") List<@IndexByTable("a_test_package.ibt5") SortedMap<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					outputIbt2 = PARAMETER MODEL (outputIbt2)
						ANNOTATIONS:
							@Out
						TYPE:
							@IndexByTable("a_test_package.ibt2") Map<@BinaryInteger BigInteger,@IndexByTable("a_test_package.ibt5") Map<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					outputNst1 = PARAMETER MODEL (outputNst1)
						ANNOTATIONS:
							@Out
						TYPE:
							@NestedTable("a_test_package.nst1") List<@IndexByTable("a_test_package.ibt5") Map<@String_(20) String,@Varray("a_test_package.var5") List<@Varchar2(100) String>>>
					outputIbt3 = PARAMETER MODEL (outputIbt3)
						ANNOTATIONS:
							@Out
						TYPE:
							@IndexByTable("a_test_package.ibt3") Map<@Long_ String,@Varchar2(200) String @NestedTable("a_test_package.nst5") []>
					outputVar2 = PARAMETER MODEL (outputVar2)
						ANNOTATIONS:
							@Out
						TYPE:
							@Varray("a_test_package.var2") List<@Varchar2(200) String @NestedTable("a_test_package.nst5") []>
					outputClob = PARAMETER MODEL (outputClob)
						ANNOTATIONS:
							@Out
						TYPE:
							@Clob StringBuilder
	pleasejava.test.alltypes.Record1 = CLASS MODEL (class pleasejava.test.alltypes.Record1)
		IMPORTS:
			java.math.BigInteger
			java.util.List
			java.util.Map
			pleasejava.test.alltypes.Record3
			plsql.Plsql.BinaryInteger
			plsql.Plsql.IndexByTable
			plsql.Plsql.NestedTable
			plsql.Plsql.Number_
			plsql.Plsql.String_
			plsql.Plsql.Varchar2
			plsql.Plsql.Varray
		FIELDS:
			nst4 = FIELD MODEL ([private] nst4)
				ANNOTATIONS:
				TYPE:
					@NestedTable("a_test_package.nst4") List<Record3>
			ibt4 = FIELD MODEL ([private] ibt4)
				ANNOTATIONS:
				TYPE:
					@IndexByTable("a_test_package.ibt4") Map<@Varchar2(10) String,@Number_(value=30,scale=0) BigInteger>
			binary = FIELD MODEL ([private] binary)
				ANNOTATIONS:
				TYPE:
					@BinaryInteger Integer
			ibt5 = FIELD MODEL ([private] ibt5)
				ANNOTATIONS:
				TYPE:
					@IndexByTable("a_test_package.ibt5") Map<@String_(20) String,@Varchar2(100) String @Varray("a_test_package.var5") []>
		METHODS:
			getNst4 = METHOD MODEL ([public] getNst4)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return nst4;
			setNst4 = METHOD MODEL ([public] setNst4)
				ANNOTATIONS:
				PARAMETERS:
					nst4 = PARAMETER MODEL (nst4)
						ANNOTATIONS:
						TYPE:
							List<Record3>
				BODY:
					this.nst4 = nst4;
			getIbt4 = METHOD MODEL ([public] getIbt4)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return ibt4;
			setIbt4 = METHOD MODEL ([public] setIbt4)
				ANNOTATIONS:
				PARAMETERS:
					ibt4 = PARAMETER MODEL (ibt4)
						ANNOTATIONS:
						TYPE:
							Map<String,BigInteger>
				BODY:
					this.ibt4 = ibt4;
			getBinary = METHOD MODEL ([public] getBinary)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return binary;
			setBinary = METHOD MODEL ([public] setBinary)
				ANNOTATIONS:
				PARAMETERS:
					binary = PARAMETER MODEL (binary)
						ANNOTATIONS:
						TYPE:
							Integer
				BODY:
					this.binary = binary;
			getIbt5 = METHOD MODEL ([public] getIbt5)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return ibt5;
			setIbt5 = METHOD MODEL ([public] setIbt5)
				ANNOTATIONS:
				PARAMETERS:
					ibt5 = PARAMETER MODEL (ibt5)
						ANNOTATIONS:
						TYPE:
							Map<String,String[]>
				BODY:
					this.ibt5 = ibt5;
	pleasejava.test.alltypes.Record2 = CLASS MODEL (class pleasejava.test.alltypes.Record2)
		IMPORTS:
			java.math.BigInteger
			java.util.List
			pleasejava.test.alltypes.Record3
			plsql.Plsql.PlsInteger
			plsql.Plsql.Varchar2
			plsql.Plsql.Varray
		FIELDS:
			var5 = FIELD MODEL ([private] var5)
				ANNOTATIONS:
				TYPE:
					@Varray("a_test_package.var5") List<@Varchar2(100) String>
			firstRec3 = FIELD MODEL ([private] firstRec3)
				ANNOTATIONS:
				TYPE:
					Record3
			pls = FIELD MODEL ([private] pls)
				ANNOTATIONS:
				TYPE:
					@PlsInteger BigInteger
			secondRec3 = FIELD MODEL ([private] secondRec3)
				ANNOTATIONS:
				TYPE:
					Record3
		METHODS:
			getVar5 = METHOD MODEL ([public] getVar5)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return var5;
			setVar5 = METHOD MODEL ([public] setVar5)
				ANNOTATIONS:
				PARAMETERS:
					var5 = PARAMETER MODEL (var5)
						ANNOTATIONS:
						TYPE:
							List<String>
				BODY:
					this.var5 = var5;
			getFirstRec3 = METHOD MODEL ([public] getFirstRec3)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return firstRec3;
			setFirstRec3 = METHOD MODEL ([public] setFirstRec3)
				ANNOTATIONS:
				PARAMETERS:
					firstRec3 = PARAMETER MODEL (firstRec3)
						ANNOTATIONS:
						TYPE:
							Record3
				BODY:
					this.firstRec3 = firstRec3;
			getPls = METHOD MODEL ([public] getPls)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return pls;
			setPls = METHOD MODEL ([public] setPls)
				ANNOTATIONS:
				PARAMETERS:
					pls = PARAMETER MODEL (pls)
						ANNOTATIONS:
						TYPE:
							BigInteger
				BODY:
					this.pls = pls;
			getSecondRec3 = METHOD MODEL ([public] getSecondRec3)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return secondRec3;
			setSecondRec3 = METHOD MODEL ([public] setSecondRec3)
				ANNOTATIONS:
				PARAMETERS:
					secondRec3 = PARAMETER MODEL (secondRec3)
						ANNOTATIONS:
						TYPE:
							Record3
				BODY:
					this.secondRec3 = secondRec3;
	pleasejava.test.alltypes.Record3 = CLASS MODEL (class pleasejava.test.alltypes.Record3)
		IMPORTS:
			plsql.Plsql.Boolean_
			plsql.Plsql.Integer_
		FIELDS:
			theBoolean = FIELD MODEL ([private] theBoolean)
				ANNOTATIONS:
				TYPE:
					@Boolean_ boolean
			theInt = FIELD MODEL ([private] theInt)
				ANNOTATIONS:
				TYPE:
					@Integer_ int
		METHODS:
			isTheBoolean = METHOD MODEL ([public] isTheBoolean)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return theBoolean;
			setTheBoolean = METHOD MODEL ([public] setTheBoolean)
				ANNOTATIONS:
				PARAMETERS:
					theBoolean = PARAMETER MODEL (theBoolean)
						ANNOTATIONS:
						TYPE:
							boolean
				BODY:
					this.theBoolean = theBoolean;
			getTheInt = METHOD MODEL ([public] getTheInt)
				ANNOTATIONS:
				PARAMETERS:
				BODY:
					return theInt;
			setTheInt = METHOD MODEL ([public] setTheInt)
				ANNOTATIONS:
				PARAMETERS:
					theInt = PARAMETER MODEL (theInt)
						ANNOTATIONS:
						TYPE:
							int
				BODY:
					this.theInt = theInt;
